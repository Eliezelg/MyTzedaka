"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api-client.ts":
/*!*******************************!*\
  !*** ./src/lib/api-client.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: function() { return /* binding */ ApiClient; },\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   queryClient: function() { return /* binding */ queryClient; },\n/* harmony export */   queryKeys: function() { return /* binding */ queryKeys; }\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\");\n\n// Configuration API Client\nconst API_BASE_URL = \"http://localhost:3000\" || 0;\n// Client API principal\nclass ApiClient {\n    // Méthode pour ajouter l'authentification\n    setAuthToken(token) {\n        this.defaultHeaders = {\n            ...this.defaultHeaders,\n            \"Authorization\": \"Bearer \".concat(token)\n        };\n    }\n    // Méthode générique pour les requêtes\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const config = {\n            headers: {\n                ...this.defaultHeaders,\n                ...options.headers\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || \"HTTP Error: \".concat(response.status));\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"API Request Error:\", error);\n            throw error;\n        }\n    }\n    // Méthodes HTTP\n    async get(endpoint, params) {\n        const searchParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null) {\n                    searchParams.append(key, String(value));\n                }\n            });\n        }\n        const queryString = searchParams.toString();\n        const url = queryString ? \"\".concat(endpoint, \"?\").concat(queryString) : endpoint;\n        return this.request(url, {\n            method: \"GET\"\n        });\n    }\n    async post(endpoint, data) {\n        return this.request(endpoint, {\n            method: \"POST\",\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    async put(endpoint, data) {\n        return this.request(endpoint, {\n            method: \"PUT\",\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    async patch(endpoint, data) {\n        return this.request(endpoint, {\n            method: \"PATCH\",\n            body: data ? JSON.stringify(data) : undefined\n        });\n    }\n    async delete(endpoint) {\n        return this.request(endpoint, {\n            method: \"DELETE\"\n        });\n    }\n    constructor(){\n        this.baseURL = API_BASE_URL;\n        this.defaultHeaders = {\n            \"Content-Type\": \"application/json\"\n        };\n    }\n}\n// Instance globale du client API\nconst apiClient = new ApiClient();\n// Configuration Query Client pour TanStack Query\nconst queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.QueryClient({\n    defaultOptions: {\n        queries: {\n            staleTime: 1000 * 60 * 5,\n            gcTime: 1000 * 60 * 10,\n            retry: 3,\n            retryDelay: (attemptIndex)=>Math.min(1000 * 2 ** attemptIndex, 30000)\n        },\n        mutations: {\n            retry: 1\n        }\n    }\n});\n// Utilitaires pour les clés de cache\nconst queryKeys = {\n    // Associations\n    associations: [\n        \"associations\"\n    ],\n    associationsList: (filters)=>[\n            ...queryKeys.associations,\n            \"list\",\n            filters\n        ],\n    associationDetail: (id)=>[\n            ...queryKeys.associations,\n            \"detail\",\n            id\n        ],\n    associationCampaigns: (id)=>[\n            ...queryKeys.associations,\n            id,\n            \"campaigns\"\n        ],\n    // Campagnes\n    campaigns: [\n        \"campaigns\"\n    ],\n    campaignsList: (filters)=>[\n            ...queryKeys.campaigns,\n            \"list\",\n            filters\n        ],\n    campaignDetail: (id)=>[\n            ...queryKeys.campaigns,\n            \"detail\",\n            id\n        ],\n    // Recherche\n    search: [\n        \"search\"\n    ],\n    searchResults: (query, filters)=>[\n            ...queryKeys.search,\n            \"results\",\n            query,\n            filters\n        ],\n    searchSuggestions: (query)=>[\n            ...queryKeys.search,\n            \"suggestions\",\n            query\n        ],\n    // Hub\n    hub: [\n        \"hub\"\n    ],\n    hubStats: ()=>[\n            ...queryKeys.hub,\n            \"stats\"\n        ],\n    hubFeatured: ()=>[\n            ...queryKeys.hub,\n            \"featured\"\n        ]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api-client.ts\n"));

/***/ })

});